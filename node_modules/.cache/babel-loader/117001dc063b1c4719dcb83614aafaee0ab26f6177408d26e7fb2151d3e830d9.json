{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/fitness-website/src/FitnessSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FitnessSuggestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fitnessSuggestions = {\n  Arms: [{\n    name: 'Bicep Curls',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Tricep Dips',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Push-ups',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Dumbbell Shoulder Press',\n    sets: 4,\n    reps: 10\n  }, {\n    name: 'Chin-ups',\n    sets: 3,\n    reps: 8\n  }, {\n    name: 'Hammer Curls',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Overhead Tricep Extension',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Cable Tricep Pushdown',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Concentration Curls',\n    sets: 3,\n    reps: 10\n  }, {\n    name: 'Close-Grip Bench Press',\n    sets: 4,\n    reps: 8\n  }],\n  Abs: [{\n    name: 'Crunches',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Plank',\n    sets: 3,\n    time: '1 min'\n  }, {\n    name: 'Russian Twists',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Leg Raises',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Mountain Climbers',\n    sets: 3,\n    time: '1 min'\n  }, {\n    name: 'Bicycle Crunches',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Hanging Leg Raises',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Side Plank',\n    sets: 3,\n    time: '45 sec each side'\n  }, {\n    name: 'Toe Touches',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Reverse Crunches',\n    sets: 3,\n    reps: 15\n  }],\n  Legs: [{\n    name: 'Squats',\n    sets: 4,\n    reps: 12\n  }, {\n    name: 'Lunges',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Deadlifts',\n    sets: 4,\n    reps: 10\n  }, {\n    name: 'Leg Press',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Calf Raises',\n    sets: 4,\n    reps: 15\n  }, {\n    name: 'Leg Extensions',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Leg Curls',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Bulgarian Split Squats',\n    sets: 3,\n    reps: 10\n  }, {\n    name: 'Step-Ups',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Goblet Squats',\n    sets: 3,\n    reps: 15\n  }],\n  Chest: [{\n    name: 'Bench Press',\n    sets: 4,\n    reps: 8\n  }, {\n    name: 'Chest Fly',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Push-ups',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Incline Dumbbell Press',\n    sets: 4,\n    reps: 10\n  }, {\n    name: 'Cable Crossovers',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Decline Bench Press',\n    sets: 4,\n    reps: 8\n  }, {\n    name: 'Chest Dips',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Pec Deck Machine',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'Incline Push-ups',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'Dumbbell Pullover',\n    sets: 3,\n    reps: 12\n  }],\n  Back: [{\n    name: 'Pull-ups',\n    sets: 3,\n    reps: 10\n  }, {\n    name: 'Bent Over Rows',\n    sets: 4,\n    reps: 10\n  }, {\n    name: 'Deadlifts',\n    sets: 4,\n    reps: 8\n  }, {\n    name: 'Lat Pulldowns',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Seated Rows',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Single-Arm Dumbbell Row',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Face Pulls',\n    sets: 3,\n    reps: 15\n  }, {\n    name: 'T-Bar Rows',\n    sets: 3,\n    reps: 10\n  }, {\n    name: 'Good Mornings',\n    sets: 3,\n    reps: 12\n  }, {\n    name: 'Superman Exercise',\n    sets: 3,\n    time: '30 sec'\n  }],\n  Cardio: [{\n    name: 'Running',\n    time: '30 mins'\n  }, {\n    name: 'Cycling',\n    time: '30 mins'\n  }, {\n    name: 'Jump Rope',\n    time: '10 mins'\n  }, {\n    name: 'Burpees',\n    sets: 3,\n    reps: 20\n  }, {\n    name: 'High-Intensity Interval Training (HIIT)',\n    time: '20 mins'\n  }, {\n    name: 'Rowing',\n    time: '20 mins'\n  }, {\n    name: 'Stair Climber',\n    time: '15 mins'\n  }, {\n    name: 'Elliptical',\n    time: '30 mins'\n  }, {\n    name: 'Swimming',\n    time: '30 mins'\n  }, {\n    name: 'Kickboxing',\n    time: '20 mins'\n  }]\n};\nfunction FitnessSuggestions() {\n  _s();\n  const [selectedPart, setSelectedPart] = useState('');\n  const [randomSuggestion, setRandomSuggestion] = useState('');\n  const generateSuggestion = () => {\n    if (!selectedPart) {\n      alert(\"Please select a type of activity.\");\n      return;\n    }\n    // Randomly select a suggestion from the selected activity type\n    const suggestionsArray = fitnessSuggestions[selectedPart];\n    const randomSuggestionIndex = Math.floor(Math.random() * suggestionsArray.length);\n    const suggestion = suggestionsArray[randomSuggestionIndex];\n    setRandomSuggestion(suggestion);\n  };\n  const clearSelection = () => {\n    setRandomSuggestion('');\n    setSelectedPart('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fitness-suggestions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"activity-select\",\n        children: \"Choose a type of activity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"activity-select\",\n        value: selectedPart,\n        onChange: e => setSelectedPart(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), Object.keys(fitnessSuggestions).map(part => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: part,\n          children: part\n        }, part, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSuggestion,\n      children: \"Generate Random Suggestion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), randomSuggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestion-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: randomSuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearSelection,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(FitnessSuggestions, \"A3UZCh3d5WxArKYgMkfNt2SMpy8=\");\n_c = FitnessSuggestions;\nexport default FitnessSuggestions;\nvar _c;\n$RefreshReg$(_c, \"FitnessSuggestions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","fitnessSuggestions","Arms","name","sets","reps","Abs","time","Legs","Chest","Back","Cardio","FitnessSuggestions","_s","selectedPart","setSelectedPart","randomSuggestion","setRandomSuggestion","generateSuggestion","alert","suggestionsArray","randomSuggestionIndex","Math","floor","random","length","suggestion","clearSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","Object","keys","map","part","onClick","type","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/fitness-website/src/FitnessSuggestions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FitnessSuggestions.css';\n\nconst fitnessSuggestions = {\n  Arms: [\n    { name: 'Bicep Curls', sets: 3, reps: 12 },\n    { name: 'Tricep Dips', sets: 3, reps: 15 },\n    { name: 'Push-ups', sets: 3, reps: 20 },\n    { name: 'Dumbbell Shoulder Press', sets: 4, reps: 10 },\n    { name: 'Chin-ups', sets: 3, reps: 8 },\n    { name: 'Hammer Curls', sets: 3, reps: 12 },\n    { name: 'Overhead Tricep Extension', sets: 3, reps: 12 },\n    { name: 'Cable Tricep Pushdown', sets: 3, reps: 15 },\n    { name: 'Concentration Curls', sets: 3, reps: 10 },\n    { name: 'Close-Grip Bench Press', sets: 4, reps: 8 },\n  ],\n  Abs: [\n    { name: 'Crunches', sets: 3, reps: 20 },\n    { name: 'Plank', sets: 3, time: '1 min' },\n    { name: 'Russian Twists', sets: 3, reps: 15 },\n    { name: 'Leg Raises', sets: 3, reps: 15 },\n    { name: 'Mountain Climbers', sets: 3, time: '1 min' },\n    { name: 'Bicycle Crunches', sets: 3, reps: 20 },\n    { name: 'Hanging Leg Raises', sets: 3, reps: 12 },\n    { name: 'Side Plank', sets: 3, time: '45 sec each side' },\n    { name: 'Toe Touches', sets: 3, reps: 20 },\n    { name: 'Reverse Crunches', sets: 3, reps: 15 },\n  ],\n  Legs: [\n    { name: 'Squats', sets: 4, reps: 12 },\n    { name: 'Lunges', sets: 3, reps: 15 },\n    { name: 'Deadlifts', sets: 4, reps: 10 },\n    { name: 'Leg Press', sets: 3, reps: 12 },\n    { name: 'Calf Raises', sets: 4, reps: 15 },\n    { name: 'Leg Extensions', sets: 3, reps: 12 },\n    { name: 'Leg Curls', sets: 3, reps: 12 },\n    { name: 'Bulgarian Split Squats', sets: 3, reps: 10 },\n    { name: 'Step-Ups', sets: 3, reps: 12 },\n    { name: 'Goblet Squats', sets: 3, reps: 15 },\n  ],\n  Chest: [\n    { name: 'Bench Press', sets: 4, reps: 8 },\n    { name: 'Chest Fly', sets: 3, reps: 12 },\n    { name: 'Push-ups', sets: 3, reps: 20 },\n    { name: 'Incline Dumbbell Press', sets: 4, reps: 10 },\n    { name: 'Cable Crossovers', sets: 3, reps: 15 },\n    { name: 'Decline Bench Press', sets: 4, reps: 8 },\n    { name: 'Chest Dips', sets: 3, reps: 12 },\n    { name: 'Pec Deck Machine', sets: 3, reps: 15 },\n    { name: 'Incline Push-ups', sets: 3, reps: 20 },\n    { name: 'Dumbbell Pullover', sets: 3, reps: 12 },\n  ],\n  Back: [\n    { name: 'Pull-ups', sets: 3, reps: 10 },\n    { name: 'Bent Over Rows', sets: 4, reps: 10 },\n    { name: 'Deadlifts', sets: 4, reps: 8 },\n    { name: 'Lat Pulldowns', sets: 3, reps: 12 },\n    { name: 'Seated Rows', sets: 3, reps: 12 },\n    { name: 'Single-Arm Dumbbell Row', sets: 3, reps: 12 },\n    { name: 'Face Pulls', sets: 3, reps: 15 },\n    { name: 'T-Bar Rows', sets: 3, reps: 10 },\n    { name: 'Good Mornings', sets: 3, reps: 12 },\n    { name: 'Superman Exercise', sets: 3, time: '30 sec' },\n  ],\n  Cardio: [\n    { name: 'Running', time: '30 mins' },\n    { name: 'Cycling', time: '30 mins' },\n    { name: 'Jump Rope', time: '10 mins' },\n    { name: 'Burpees', sets: 3, reps: 20 },\n    { name: 'High-Intensity Interval Training (HIIT)', time: '20 mins' },\n    { name: 'Rowing', time: '20 mins' },\n    { name: 'Stair Climber', time: '15 mins' },\n    { name: 'Elliptical', time: '30 mins' },\n    { name: 'Swimming', time: '30 mins' },\n    { name: 'Kickboxing', time: '20 mins' },\n  ],\n};\n\nfunction FitnessSuggestions() {\n  const [selectedPart, setSelectedPart] = useState('');\n  const [randomSuggestion, setRandomSuggestion] = useState('');\n\n  const generateSuggestion = () => {\n    if (!selectedPart) {\n      alert(\"Please select a type of activity.\");\n      return;\n    }\n    // Randomly select a suggestion from the selected activity type\n    const suggestionsArray = fitnessSuggestions[selectedPart];\n    const randomSuggestionIndex = Math.floor(Math.random() * suggestionsArray.length);\n    const suggestion = suggestionsArray[randomSuggestionIndex];\n    setRandomSuggestion(suggestion);\n  };\n\n  const clearSelection = () => {\n    setRandomSuggestion('');\n    setSelectedPart('');\n  };\n\n  return (\n    <div className=\"fitness-suggestions\">\n      <h1>Fitness Suggestions</h1>\n\n      <div>\n        <label htmlFor=\"activity-select\">Choose a type of activity:</label>\n        <select\n          id=\"activity-select\"\n          value={selectedPart}\n          onChange={(e) => setSelectedPart(e.target.value)}\n        >\n          <option value=\"\">Select a part</option>\n          {Object.keys(fitnessSuggestions).map(part => (\n            <option key={part} value={part}>{part}</option>\n          ))}\n        </select>\n      </div>\n\n      <button onClick={generateSuggestion}>Generate Random Suggestion</button>\n\n      {randomSuggestion && (\n        <div className=\"suggestion-display\">\n          <p>{randomSuggestion}</p>\n\n          <div className=\"button-container\">\n            <button type=\"button\" onClick={clearSelection}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FitnessSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}