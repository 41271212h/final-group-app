{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/fitness-website/src/FitnessSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FitnessSuggestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fitnessSuggestions = {\n  Arms: ['Bicep Curls', 'Tricep Dips', 'Push-ups', 'Dumbbell Shoulder Press', 'Chin-ups'],\n  Abs: ['Crunches', 'Plank', 'Russian Twists', 'Leg Raises', 'Mountain Climbers'],\n  Legs: ['Squats', 'Lunges', 'Deadlifts', 'Leg Press', 'Calf Raises'],\n  Chest: ['Bench Press', 'Chest Fly', 'Push-ups', 'Incline Dumbbell Press', 'Cable Crossovers'],\n  Back: ['Pull-ups', 'Bent Over Rows', 'Deadlifts', 'Lat Pulldowns', 'Seated Rows'],\n  Cardio: ['Running', 'Cycling', 'Jump Rope', 'Burpees', 'High-Intensity Interval Training (HIIT)']\n};\nfunction FitnessSuggestions() {\n  _s();\n  const [selectedPart, setSelectedPart] = useState('');\n  const [randomSuggestion, setRandomSuggestion] = useState('');\n  const generateSuggestion = () => {\n    if (!selectedPart) {\n      alert(\"Please select a type of activity.\");\n      return;\n    }\n    // Randomly select a suggestion from the selected activity type\n    const suggestionsArray = fitnessSuggestions[selectedPart];\n    const randomSuggestionIndex = Math.floor(Math.random() * suggestionsArray.length);\n    const suggestion = suggestionsArray[randomSuggestionIndex];\n    setRandomSuggestion(suggestion);\n  };\n  const clearSelection = () => {\n    setRandomSuggestion('');\n    setSelectedPart('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fitness-suggestions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"activity-select\",\n        children: \"Choose a type of activity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"activity-select\",\n        value: selectedPart,\n        onChange: e => setSelectedPart(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), Object.keys(fitnessSuggestions).map(part => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: part,\n          children: part\n        }, part, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSuggestion,\n      children: \"Generate Random Suggestion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), randomSuggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestion-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: randomSuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearSelection,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(FitnessSuggestions, \"A3UZCh3d5WxArKYgMkfNt2SMpy8=\");\n_c = FitnessSuggestions;\nexport default FitnessSuggestions;\nvar _c;\n$RefreshReg$(_c, \"FitnessSuggestions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","fitnessSuggestions","Arms","Abs","Legs","Chest","Back","Cardio","FitnessSuggestions","_s","selectedPart","setSelectedPart","randomSuggestion","setRandomSuggestion","generateSuggestion","alert","suggestionsArray","randomSuggestionIndex","Math","floor","random","length","suggestion","clearSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","Object","keys","map","part","onClick","type","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/fitness-website/src/FitnessSuggestions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FitnessSuggestions.css';\n\nconst fitnessSuggestions = {\n  Arms: [\n    'Bicep Curls',\n    'Tricep Dips',\n    'Push-ups',\n    'Dumbbell Shoulder Press',\n    'Chin-ups',\n  ],\n  Abs: [\n    'Crunches',\n    'Plank',\n    'Russian Twists',\n    'Leg Raises',\n    'Mountain Climbers',\n  ],\n  Legs: [\n    'Squats',\n    'Lunges',\n    'Deadlifts',\n    'Leg Press',\n    'Calf Raises',\n  ],\n  Chest: [\n    'Bench Press',\n    'Chest Fly',\n    'Push-ups',\n    'Incline Dumbbell Press',\n    'Cable Crossovers',\n  ],\n  Back: [\n    'Pull-ups',\n    'Bent Over Rows',\n    'Deadlifts',\n    'Lat Pulldowns',\n    'Seated Rows',\n  ],\n  Cardio: [\n    'Running',\n    'Cycling',\n    'Jump Rope',\n    'Burpees',\n    'High-Intensity Interval Training (HIIT)',\n  ],\n};\n\nfunction FitnessSuggestions() {\n  const [selectedPart, setSelectedPart] = useState('');\n  const [randomSuggestion, setRandomSuggestion] = useState('');\n\n  const generateSuggestion = () => {\n    if (!selectedPart) {\n      alert(\"Please select a type of activity.\");\n      return;\n    }\n    // Randomly select a suggestion from the selected activity type\n    const suggestionsArray = fitnessSuggestions[selectedPart];\n    const randomSuggestionIndex = Math.floor(Math.random() * suggestionsArray.length);\n    const suggestion = suggestionsArray[randomSuggestionIndex];\n    setRandomSuggestion(suggestion);\n  };\n\n  const clearSelection = () => {\n    setRandomSuggestion('');\n    setSelectedPart('');\n  };\n\n  return (\n    <div className=\"fitness-suggestions\">\n      <h1>Fitness Suggestions</h1>\n\n      <div>\n        <label htmlFor=\"activity-select\">Choose a type of activity:</label>\n        <select\n          id=\"activity-select\"\n          value={selectedPart}\n          onChange={(e) => setSelectedPart(e.target.value)}\n        >\n          <option value=\"\">Select a part</option>\n          {Object.keys(fitnessSuggestions).map(part => (\n            <option key={part} value={part}>{part}</option>\n          ))}\n        </select>\n      </div>\n\n      <button onClick={generateSuggestion}>Generate Random Suggestion</button>\n\n      {randomSuggestion && (\n        <div className=\"suggestion-display\">\n          <p>{randomSuggestion}</p>\n\n          <div className=\"button-container\">\n            <button type=\"button\" onClick={clearSelection}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FitnessSuggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}